'''import RPi.GPIO as GPIO



# Pin Setup
left1_moter_pins = (35,16)
left2_moter_pins = (33,18)
right1_moter_pins = (32,11)
right2_moter_pins = (12,13)

left_sensor_pin = 19
right_sensor_pin = 21
GPIO.setmode(GPIO.BOARD)
GPIO.setup(left_sensor_pin, GPIO.IN)
GPIO.setup(right_sensor_pin, GPIO.IN)
GPIO.setup(left1_motor_pins, GPIO.OUT)
GPIO.setup(right1_motor_pins, GPIO.OUT)
GPIO.setup(left2_motor_pins, GPIO.OUT)
GPIO.setup(right2_motor_pins, GPIO.OUT)
speed = 0.65
left1_mot = 1
right1_mot = 1
left2_mot = 1
right2_mot = 1
def motor_speed():
    try:
        while True:
            left_detect = GPIO.input(left_sensor_pin)
            right_detect = GPIO.input(right_sensor_pin)
            if left_detect == 1 and right_detect == 1:
                print("Go straight")
            if left_detect == 1 and right_detect == 0:
                print("Turn left")
            if left_detect == 0 and right_detect == 1:
                print("Turn right")
            if left_detect == 0 and right_detect == 0:
                print("Collision!")
    
    except KeyboardInterrupt:
        GPIO.cleanup()
motor_speed()
'''
'''
import RPi.GPIO as GPIO

# Pin Setup
left1_motor_pins = (35, 16)
left2_motor_pins = (33, 18)
right1_motor_pins = (32, 11)
right2_motor_pins = (12, 13)

left_sensor_pin = 19
right_sensor_pin = 21

GPIO.setmode(GPIO.BOARD)
GPIO.setup(left_sensor_pin, GPIO.IN)
GPIO.setup(right_sensor_pin, GPIO.IN)
GPIO.setup(left1_motor_pins + left2_motor_pins + right1_motor_pins + right2_motor_pins, GPIO.OUT)

speed = 0.65
left1_mot = 1
right1_mot = 1
left2_mot = 1
right2_mot = 1

def motor_speed():
    try:
        while True:
            left_detect = GPIO.input(left_sensor_pin)
            right_detect = GPIO.input(right_sensor_pin)

            if left_detect == 1 and right_detect == 1:
                print("Go straight")
                left1_mot = 1
                left2_mot = 1
                right1_mot = 1
                right2_mot = 1
            if left_detect == 1 and right_detect == 0:
                print("Turn left")
                left1_mot = 0
                left2_mot = 0
                right1_mot = 1
                right2_mot = 0
            if left_detect == 0 and right_detect == 1:
                print("Turn right")
                left1_mot = 1
                left2_mot = 0
                right1_mot = 0
                right2_mot = 0
            if left_detect == 0 and right_detect == 0:
                print("Collision!")

    except KeyboardInterrupt:
        GPIO.cleanup()

motor_speed()
'''
import RPi.GPIO as GPIO
from time import sleep
import wiringpi as wiringpi
import time 
wiringpi.wiringPiSetupGpio()
# Pin Setup
vfor = 16  
vforpwm = 35  
vbag = 18  
vbagpwm = 33 
hfor = 13
hforpwm = 12 
hbag = 11
hbagpwm = 32
LineFollowerV = 10
LineFollowerH = 9




# Initialize GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(vfor, GPIO.OUT) 
wiringpi.softPwmCreate(vforpwm, 0, 100) 
GPIO.setup(vbag, GPIO.OUT)
GPIO.setup(vbagpwm, GPIO.OUT)
GPIO.setup(hfor, GPIO.OUT) 
wiringpi.softPwmCreate(hforpwm, 0, 100) 
GPIO.setup(hbag, GPIO.OUT)
GPIO.setup(hbagpwm, GPIO.OUT)
GPIO.setup(LineFollowerH, GPIO.IN)
GPIO.setup(LineFollowerV, GPIO.IN)


#venstre for dir1 = gpio23, board 16. pwm1 = gpio19 borad 35
#venstre bag dir2 = gpio24, board 18. pwm2 = gpio13 board 33
#højre for dir2 = gpio27, board 13. pwm2 = gpio18 board 12
#højre bag dir1 = gpio17, board 11. pwm1 =gpio12 board 32
#line venstre = gpio 10
#line højre = gpio 9


# Function to set motor speed
wiringpi.softPwmWrite(hforpwm,0)
right_pwm = GPIO.PWM(hbagpwm, 100)
left_pwm2 = GPIO.PWM(vbagpwm, 100)
wiringpi.softPwmWrite(hforpwm, 0)
right_pwm.start(0)
left_pwm2.start(0)

print("test 4")
def forward(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 5")
def backward(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
print("test 6")
def turn_left(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.LOW)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
print("test 7")
def turn_right(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm.ChangeDutyCycle(speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
print("test 8")
def stop():
    left_pwm2.ChangeDutyCycle(0)
    right_pwm.ChangeDutyCycle(0)
    left_pwm2.ChangeDutyCycle(0)
    right_pwm.ChangeDutyCycle(0)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM, 0)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 0)
print("test 9")
# Example usage
try:
    print("test 1")
    forward(60)
    time.sleep(2)
    stop()
    time.sleep(1)
    print("test 2")
    backward(50)
    time.sleep(2)
    stop()
    time.sleep(1)
    print("test 3")
    turn_left(40)
    time.sleep(1)
    stop()
    time.sleep(1)
    print("test 4")
    turn_right(40)
    time.sleep(1)
    stop()
except KeyboardInterrupt:
    pass

# Clean up GPIO on program exit
GPIO.cleanup()
wiringpi.softPwmWrite(LEFT_MOTOR_PWM, 0)
wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 0)

