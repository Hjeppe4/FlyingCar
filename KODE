'''import RPi.GPIO as GPIO
from time import sleep
# Pin Setup
IN1 = 23  # Replace with the GPIO pin you connected to IN1
IN2 = 16  # Replace with the GPIO pin you connected to IN2
IN3 = 24  # Replace with the GPIO pin you connected to IN3
IN4 = 13  # Replace with the GPIO pin you connected to IN4

speed = 50  # Set the initial speed (0-100)

# Initialize GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setup(IN1, GPIO.OUT)
GPIO.setup(IN2, GPIO.OUT)
GPIO.setup(IN3, GPIO.OUT)
GPIO.setup(IN4, GPIO.OUT)

# Function to control motor direction
def set_motor_direction(left_dir1, right_dir2):
    GPIO.output(IN1, left_dir1)
    GPIO.output(IN2, not left_dir1)
    GPIO.output(IN3, right_dir2)
    GPIO.output(IN4, not right_dir2)

# Function to set motor speed
def set_motor_speed(left_speed1, right_speed2):
    left_pwm = GPIO.PWM(IN2, 1000)  # 1000 Hz frequency
    right_pwm = GPIO.PWM(IN4, 1000)  # 1000 Hz frequency
    left_pwm.start(left_speed1)
    right_pwm.start(right_speed2)

# Initial motor direction and speed
set_motor_direction(1, 1)  # Set both motors to forward
set_motor_speed(speed, speed)  # Set the initial speed
'''
print("test 2")
import RPi.GPIO as GPIO
GPIO.setwarnings(False)
GPIO.cleanup()


import time

print("test 1")# Define GPIO pins for motor control
LEFT_MOTOR_PWM = 35
LEFT_MOTOR_IN1 = 16
LEFT_MOTOR_IN2 = 18
LEFT_MOTOR_PWM2 = 33
RIGHT_MOTOR_PWM = 32
RIGHT_MOTOR_IN1 = 11
RIGHT_MOTOR_IN2 = 13
RIGHT_MOTOR_PWM2 = 12
print("test 2")
# Set GPIO mode and configure pins
GPIO.setmode(GPIO.BCM)
GPIO.setup(LEFT_MOTOR_PWM, GPIO.OUT)
GPIO.setup(LEFT_MOTOR_IN1, GPIO.OUT)
GPIO.setup(LEFT_MOTOR_IN2, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_PWM, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_IN1, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_IN2, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_PWM2, GPIO.OUT)
GPIO.setup(LEFT_MOTOR_PWM2, GPIO.OUT)
print("test 3")
# Initialize PWM for motor speed control
left_pwm = GPIO.PWM(LEFT_MOTOR_PWM, 100)
right_pwm = GPIO.PWM(RIGHT_MOTOR_PWM, 100)
left_pwm2 = GPIO.PWM(LEFT_MOTOR_PWM, 100)
right_pwm2 = GPIO.PWM(RIGHT_MOTOR_PWM, 100)
left_pwm.start(0)
right_pwm.start(0)
left_pwm2.start(0)
right_pwm2.start(0)
print("test 4")
def forward(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
print("test 5")
def backward(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
print("test 6")
def turn_left(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.LOW)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
print("test 7")
def turn_right(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
    left_pwm2.ChangeDutyCycle(speed)
    right_pwm2.ChangeDutyCycle(speed)
print("test 8")
def stop():
    left_pwm2.ChangeDutyCycle(0)
    right_pwm2.ChangeDutyCycle(0)
    left_pwm2.ChangeDutyCycle(0)
    right_pwm2.ChangeDutyCycle(0)
print("test 9")
# Example usage
try:
    print("test 1")
    forward(60)
    time.sleep(2)
    stop()
    time.sleep(1)
    print("test 2")
    backward(50)
    time.sleep(2)
    stop()
    time.sleep(1)
    print("test 3")
    turn_left(40)
    time.sleep(1)
    stop()
    time.sleep(1)
    print("test 4")
    turn_right(40)
    time.sleep(1)
    stop()
except KeyboardInterrupt:
    pass

# Clean up GPIO on program exit
GPIO.cleanup()

