print("test 2")
import RPi.GPIO as GPIO
print("test 2")
import wiringpi as wiringpi

print("test 2")
wiringpi.wiringPiSetupGpio()

print("test 2")

from time import sleep
import time

print("test 1")# Define GPIO pins for motor control
LEFT_MOTOR_PWM = 19
LEFT_MOTOR_IN1 = 23
LEFT_MOTOR_IN2 = 24
LEFT_MOTOR_PWM2 = 14    
RIGHT_MOTOR_PWM = 15  
RIGHT_MOTOR_IN1 = 17
RIGHT_MOTOR_IN2 = 27
RIGHT_MOTOR_PWM2 = 18
LineFollowerV = 10
LineFollowerH = 9   
print("test 2")
# Set GPIO mode and configure pins
GPIO.setmode(GPIO.BCM)
wiringpi.softPwmCreate(LEFT_MOTOR_PWM, 0, 100) 
wiringpi.softPwmCreate(RIGHT_MOTOR_PWM2, 0, 100) 
# GPIO.setup(LEFT_MOTOR_PWM, GPIO.OUT) 
GPIO.setup(LEFT_MOTOR_IN1, GPIO.OUT)
GPIO.setup(LEFT_MOTOR_IN2, GPIO.OUT)
wiringpi.softPwmCreate(LEFT_MOTOR_PWM2, 0, 100) 
wiringpi.softPwmCreate(RIGHT_MOTOR_PWM, 0, 100) 
GPIO.setup(RIGHT_MOTOR_IN1, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_IN2, GPIO.OUT)
GPIO.setup(LineFollowerV, GPIO.IN)
GPIO.setup(LineFollowerH, GPIO.IN)

print("test 3")
# Initialize PWM for motor speed control
wiringpi.softPwmWrite(LEFT_MOTOR_PWM,0)
wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, 0)
wiringpi.softPwmWrite(LEFT_MOTOR_PWM2, 0)
wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 0)


print("test 4")
def forward(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 5")
def backward(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 6")
def turn_left(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.LOW)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 7")
def turn_right(speed=50):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 8")
def stop():
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 9")
# Example usage
try:
    while True:
        # Your line sensor logic here
        left_detect = int (GPIO.input(LineFollowerV))
        right_detect = int (GPIO.input(LineFollowerH))
        print(left_detect)
        print(right_detect)
        if left_detect == 1 and right_detect == 1:
            print("Go straight")
            forward()
        elif left_detect == 1 and right_detect == 0:
            print("Turn left")
            turn_left()
        elif left_detect == 0 and right_detect == 1:
            print("Turn right")
            turn_right()
        else:
            print("Collision")
            stop()
        sleep(0.1)
except KeyboardInterrupt:
    pass

# Clean up GPIO on program exit
GPIO.cleanup()
wiringpi.softPwmWrite(LEFT_MOTOR_PWM, 0)
wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 0)

