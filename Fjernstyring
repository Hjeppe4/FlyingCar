print("test 2")
import RPi.GPIO as GPIO
print("test 2")
import wiringpi as wiringpi

print("test 2")
wiringpi.wiringPiSetupGpio()
from sshkeyboard import listen_keyboard

print("test 2")

from time import sleep
import time
GPIO.setmode(GPIO.BCM)
print("test 1")# Define GPIO pins for motor control
LEFT_MOTOR_PWM = 19
LEFT_MOTOR_IN1 = 23
LEFT_MOTOR_IN2 = 24
LEFT_MOTOR_PWM2 = 14    
RIGHT_MOTOR_PWM = 15  
RIGHT_MOTOR_IN1 = 17
RIGHT_MOTOR_IN2 = 27
RIGHT_MOTOR_PWM2 = 18
LineFollowerV = 10
LineFollowerH = 9  
Lys1 = 21
Lys2 = 16
GPIO.setup(12,GPIO.OUT)  # Sets up pin 11 to an output (instead of an input)
p = GPIO.PWM(12, 50)  
GPIO.setup(13,GPIO.OUT)  # Sets up pin 11 to an output (instead of an input)
p2 = GPIO.PWM(13, 50)   # Sets up pin 11 as a PWM pin
p.start(10)               # Starts running PWM on the pin and sets it to 0
p2.start(7)
time.sleep(1) 
print("test 2")
# Set GPIO mode and configure pins

wiringpi.softPwmCreate(LEFT_MOTOR_PWM, 0, 100) 
wiringpi.softPwmCreate(RIGHT_MOTOR_PWM2, 0, 100) 
# GPIO.setup(LEFT_MOTOR_PWM, GPIO.OUT) 
GPIO.setup(LEFT_MOTOR_IN1, GPIO.OUT)
GPIO.setup(LEFT_MOTOR_IN2, GPIO.OUT)
wiringpi.softPwmCreate(LEFT_MOTOR_PWM2, 0, 100) 
wiringpi.softPwmCreate(RIGHT_MOTOR_PWM, 0, 100) 
GPIO.setup(RIGHT_MOTOR_IN1, GPIO.OUT)
GPIO.setup(RIGHT_MOTOR_IN2, GPIO.OUT)
GPIO.setup(LineFollowerV, GPIO.IN)
GPIO.setup(LineFollowerH, GPIO.IN)
GPIO.setup(Lys1, GPIO.OUT)
GPIO.setup(Lys2, GPIO.OUT)

print("test 3")
# Initialize PWM for motor speed control
wiringpi.softPwmWrite(LEFT_MOTOR_PWM,0)
wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, 0)
wiringpi.softPwmWrite(LEFT_MOTOR_PWM2, 0)
wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 0)


print("test 4")
def forward(speed=100):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2,speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,speed)
print("test 5")
def backward(speed=100):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.LOW)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM, speed)
print("test 6")
def turn_left(speed=100):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, 40)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2, 0)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 40)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM, speed)
print("test 7")
def turn_right(speed=100):
    GPIO.output(LEFT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, 0)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2, 40)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, speed)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM,40)
print("test 8")
def stop():
    GPIO.output(LEFT_MOTOR_IN1, GPIO.HIGH)
    GPIO.output(LEFT_MOTOR_IN2, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN1, GPIO.LOW)
    GPIO.output(RIGHT_MOTOR_IN2, GPIO.HIGH)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM, 0)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM2, 0)
    wiringpi.softPwmWrite(RIGHT_MOTOR_PWM, 0)
    wiringpi.softPwmWrite(LEFT_MOTOR_PWM2, 0)
print("test 9")
# Example usage
def press(key):
    if key == "w":
        forward()
    if key == "s":
        backward()
    if key == "a":
        turn_right()
    if key == "d":
        turn_left()
    if key == "b":
        p.ChangeDutyCycle(10)
        time.sleep(2)

        p.ChangeDutyCycle(6)
        time.sleep(2)
        p.ChangeDutyCycle(10)
    if key == "m":
        stop()


while True:
    listen_keyboard(on_press = press)

GPIO.cleanup()